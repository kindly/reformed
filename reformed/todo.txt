- change joint primary key columns to have an id column as well but, so they become unique constraints - DONE
- set up logging - Done
- make formencode validators or updated existing ones when field layout sugests
- add validation column to persisted field table for basic field validation or potentially a validation table
- add default not nulls for joint columns
- modify the add table and add field so as to go through set parent - Done
- sort out test coverage for database especially looking at all join conditions
- add table that joins back to an entity table - can be done by making join from both tables
- add unique constraints - Done
- add nullable,sequences and any other sqlalchemy column level parameters -Done
- add validation - basicly DONE
- sort out order of field, by adding counter to columns and fields using setattr
- do checks to see if defined table reflects table underneath
- persist database information - Done
- create object for getting sa_objects
- give all relevent tables locking information
- give all tables potential to log information - Done
- make sure namespaces for objects are unique, looking at especially backreferences need to check relations forien keyclashed 
- make sure field definition namespaces are unique
- searching
- optimise make sa_table
- make sure indexs and unique constraints are remade
- add ordering list implementation
